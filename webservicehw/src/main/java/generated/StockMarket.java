
package cz.muni.fi.pa053;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This is a stock market service. Create your account in the market using method 'createAccount'. The account will be created with a given number of currency units the actual account balance can be queried by 'balance' method. Using the returned account identifier, you can trade using 'buy' and 'sell' methods. The market has several stocks that can be traded, list can be obtained using 'list' method. Actual price of a stock can be retrieved using 'info' method. Please note that the market prices change in time.
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.1
 * Generated source version: 2.2
 * 
 */
@WebService(name = "StockMarket", targetNamespace = "http://pa053.fi.muni.cz/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StockMarket {


    /**
     * Returns the amount of currency units that is still needed to earn to successfully finish the homework
     * 
     * @param accountId
     * @return
     *     returns int
     * @throws UnknownUser_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "howMuchToFinish", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.HowMuchToFinish")
    @ResponseWrapper(localName = "howMuchToFinishResponse", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.HowMuchToFinishResponse")
    public int howMuchToFinish(
        @WebParam(name = "accountId", targetNamespace = "")
        String accountId)
        throws UnknownUser_Exception
    ;

    /**
     * Creates account for the stock market. Your email address must be specified as parameter. Returns account identifier used in other methods.
     * 
     * @param email
     * @return
     *     returns java.lang.String
     * @throws CannotProceed_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createAccount", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.CreateAccount")
    @ResponseWrapper(localName = "createAccountResponse", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.CreateAccountResponse")
    public String createAccount(
        @WebParam(name = "email", targetNamespace = "")
        String email)
        throws CannotProceed_Exception
    ;

    /**
     * Returns list of market stocks.
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "list", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.List")
    @ResponseWrapper(localName = "listResponse", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.ListResponse")
    public List<String> list();

    /**
     * Returns the current price of one unit of the stock specified in the parameter.
     * 
     * @param stock
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "info", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.Info")
    @ResponseWrapper(localName = "infoResponse", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.InfoResponse")
    public int info(
        @WebParam(name = "stock", targetNamespace = "")
        String stock);

    /**
     * Returns the given account balance.
     * 
     * @param accountId
     * @return
     *     returns int
     * @throws UnknownUser_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "balance", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.Balance")
    @ResponseWrapper(localName = "balanceResponse", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.BalanceResponse")
    public int balance(
        @WebParam(name = "accountId", targetNamespace = "")
        String accountId)
        throws UnknownUser_Exception
    ;

    /**
     * Buy the given amount of the given stock using the current market price. Exception is raised if the specified account does not have enough funds.
     * 
     * @param accountId
     * @param amount
     * @param stock
     * @throws CannotProceed_Exception
     * @throws UnknownUser_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "buy", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.Buy")
    @ResponseWrapper(localName = "buyResponse", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.BuyResponse")
    public void buy(
        @WebParam(name = "accountId", targetNamespace = "")
        String accountId,
        @WebParam(name = "stock", targetNamespace = "")
        String stock,
        @WebParam(name = "amount", targetNamespace = "")
        int amount)
        throws CannotProceed_Exception, UnknownUser_Exception
    ;

    /**
     * Returns the amount of the given stock owned by the given account
     * 
     * @param accountId
     * @param stock
     * @return
     *     returns int
     * @throws UnknownUser_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "own", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.Own")
    @ResponseWrapper(localName = "ownResponse", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.OwnResponse")
    public int own(
        @WebParam(name = "accountId", targetNamespace = "")
        String accountId,
        @WebParam(name = "stock", targetNamespace = "")
        String stock)
        throws UnknownUser_Exception
    ;

    /**
     * Sell the given amount of the given stock using the current market price. Exception is raised if the user account does not have enough stocks.
     * 
     * @param accountId
     * @param amount
     * @param stock
     * @throws CannotProceed_Exception
     * @throws UnknownUser_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "sell", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.Sell")
    @ResponseWrapper(localName = "sellResponse", targetNamespace = "http://pa053.fi.muni.cz/", className = "cz.muni.fi.pa053.SellResponse")
    public void sell(
        @WebParam(name = "accountId", targetNamespace = "")
        String accountId,
        @WebParam(name = "stock", targetNamespace = "")
        String stock,
        @WebParam(name = "amount", targetNamespace = "")
        int amount)
        throws CannotProceed_Exception, UnknownUser_Exception
    ;

}
